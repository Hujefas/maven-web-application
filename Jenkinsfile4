pipeline {
    agent any
    environment {
        ERROR_LOGS = '' // Initialize a variable to store error logs
        RECIPIENT = 'hujefashaik346@gmail.com' // Email recipient
    }
    stages {
        stage('Clean') {
            steps {
                script {
                    try {
                        // Clean previous build artifacts
                        echo 'Cleaning workspace...'
                        sh 'mvn clean'
                    } catch (Exception e) {
                        captureErrorLog('Clean', e)
                        error "Clean stage failed: ${e.getMessage()}"
                    }
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    try {
                        // Build the Java application
                        echo 'Building the application...'
                        sh 'mvn compile'
                    } catch (Exception e) {
                        captureErrorLog('Build', e)
                        error "Build stage failed: ${e.getMessage()}"
                    }
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    try {
                        // Run unit tests
                        echo 'Running tests...'
                        sh 'mvn test'
                    } catch (Exception e) {
                        captureErrorLog('Test', e)
                        error "Test stage failed: ${e.getMessage()}"
                    }
                }
            }
        }
        stage('Package') {
            steps {
                script {
                    try {
                        // Package the application
                        echo 'Packaging the application...'
                        sh 'mvn package'
                    } catch (Exception e) {
                        captureErrorLog('Package', e)
                        error "Package stage failed: ${e.getMessage()}"
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    try {
                        // Deploy the application
                        echo 'Deploying the application...'
                        // Replace with actual deployment command
                        sh 'echo "Simulate deploy"'
                    } catch (Exception e) {
                        captureErrorLog('Deploy', e)
                        error "Deploy stage failed: ${e.getMessage()}"
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                if (env.ERROR_LOGS) {
                    emailext(
                        to: env.RECIPIENT,
                        subject: "Jenkins Job '${env.JOB_NAME}' (#${env.BUILD_NUMBER}) - Error Stage Logs",
                        body: """
                        <p>The Jenkins Job <strong>${env.JOB_NAME}</strong> (build #<strong>${env.BUILD_NUMBER}</strong>) encountered errors.</p>
                        <p>Error Logs:</p>
                        <pre>${env.ERROR_LOGS}</pre>
                        """,
                        mimeType: 'text/html'
                    )
                }
            }
        }
    }
}

def captureErrorLog(stageName, exception) {
    // Capture and format error log
    def log = sh(script: "echo 'Stage: ${stageName}' && echo 'Error: ${exception.getMessage()}'", returnStdout: true).trim()
    env.ERROR_LOGS += "\n\n=== ${stageName} Stage ===\n${log}\n${readFile('target/surefire-reports/*/*.txt').take(10000)}"
}
